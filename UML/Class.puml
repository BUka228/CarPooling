@startuml

class Пользователь {
    +id: int
    +имя: String
    +email: String
    +поездки: List<Поездка>
    +создатьПоездку(): Поездка
    +добавитьПоездку(поездка: Поездка): void
    +управлениеПрофилем(): void
}

class Профиль {
    +пользователь: Пользователь
    +телефон: String
    +датаРождения: Date
    +адрес: String
    +предпочтения: String
    +обновитьИнформацию(): void
}

class Поездка {
    +id: int
    +маршрут: Маршрут
    +времяВыезда: Date
    +создатель: Пользователь
    +бронирования: List<Бронирование>
    +добавитьБронирование(пользователь: Пользователь, количество: int): Бронирование
    +удалитьБронирование(бронирование: Бронирование): void
    +получитьБронирования(): List<Бронирование>
    +проверитьДоступныеМеста(количество: int): bool
}

class Бронирование {
    +id: int
    +поездка: Поездка
    +пользователь: Пользователь
    +количествоМест: int
    +оплата(): void
    +отмена(): void
}

class Маршрут {
    +id: int
    +начальнаяТочка: String
    +конечнаяТочка: String
    +дата: Date
}

class Сообщение {
    +id: int
    +отправитель: Пользователь
    +получатель: Пользователь
    +текст: String
    +датаОтправки: Date
}

class Оценка {
    +id: int
    +поездка: Поездка
    +пользователь: Пользователь
    +рейтинг: int
    +комментарий: String
}

Пользователь --> "0..*" Поездка : имеет
Пользователь --> "1..1" Профиль : имеет
Поездка --> "1..*" Бронирование : содержит

Поездка --> "1" Маршрут : имеет

Пользователь o-- "0..*" Сообщение : отправляет/получает
Поездка --> "0..*" Оценка : имеет


@enduml


